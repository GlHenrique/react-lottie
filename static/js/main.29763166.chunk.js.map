{"version":3,"sources":["reactComponentLib/index.js","App.tsx","serviceWorker.js","index.tsx"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","Lottie","_super","_this","defaultLottieConfig","renderer","loop","autoplay","setAnimationPlayingState","state","triggerPlayBasedOnSegments","animationItem","stop","pause","Error","__","constructor","create","__extends","componentDidMount","_a","props","configFromProps","config","eventListeners","container","el","lottiePlayer","loadAnimation","addEventListeners","UNSAFE_componentWillUpdate","nextProps","animationData","removeEventListeners","destroy","componentDidUpdate","playingState","speed","direction","setSpeed","setDirection","componentWillUnmount","segments","playSegments","play","reactLottieEvent","forEach","name","callback","addEventListener","removeEventListener","render","width","height","style","lottieStyles","React","createElement","ref","c","defaultProps","Component","App","prevSpeed","animationsQueue","spinnerLottieData","vanLottieData","downloadLottieData","loadingLottieData","lightBulbLottieData","restrart","setState","setStart","setPause","setStop","nextAnimation","next","shift","reverseDirection","prevState","centerStyle","display","margin","textAlign","onClick","overflow","outline","console","log","type","value","min","max","step","onChange","e","parseFloat","currentTarget","JSON","stringify","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"g9qNAoBIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAS5B,IAAIO,EAAW,WAQX,OAPAA,EAAWN,OAAOO,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIN,KADTK,EAAIG,UAAUF,GACOV,OAAOc,UAAUT,eAAeU,KAAKN,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,OAAOI,IAEKQ,MAAMC,KAAML,YAG5BM,EAAwB,SAAUC,GAElC,SAASD,IACL,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOH,MAAMC,KAAML,YAAcK,KAyBhE,OAxBAG,EAAMC,oBAAsB,CACxBC,SAAU,MACVC,MAAM,EACNC,UAAU,GAEdJ,EAAMK,yBAA2B,SAAUC,GACvC,OAAQA,GACJ,IAAK,UAED,YADAN,EAAMO,6BAGV,IAAK,UAED,YADAP,EAAMQ,cAAcC,OAGxB,IAAK,SAED,YADAT,EAAMQ,cAAcE,QAGxB,QACI,MAAM,IAAIC,MAAM,kCAIrBX,EAmEX,OAhHJ,SAAmBtB,EAAGC,GAElB,SAASiC,IAAOf,KAAKgB,YAAcnC,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEgB,UAAkB,OAANf,EAAaC,OAAOkC,OAAOnC,IAAMiC,EAAGlB,UAAYf,EAAEe,UAAW,IAAIkB,GAe/EG,CAAUjB,EAAQC,GA6BlBD,EAAOJ,UAAUsB,kBAAoB,WACjC,IAAIC,EAAKpB,KAAKqB,MAAOC,EAAkBF,EAAGG,OAAQC,EAAiBJ,EAAGI,eACtExB,KAAKuB,OAASlC,EAASA,EAASA,EAAS,GAAIW,KAAKI,qBAAsBkB,GAAkB,CAAEG,UAAWzB,KAAK0B,KAC5G1B,KAAKW,cAAgBgB,IAAaC,cAAc5B,KAAKuB,QACrDvB,KAAK6B,kBAAkBL,IAE3BvB,EAAOJ,UAAUiC,2BAA6B,SAAUC,GAChD/B,KAAKuB,OAAOS,gBAAkBD,EAAUR,OAAOS,gBAC/ChC,KAAKiC,qBAAqBjC,KAAKqB,MAAMG,gBACrCxB,KAAKW,cAAcuB,UACnBlC,KAAKuB,OAASlC,EAASA,EAAS,GAAIW,KAAKuB,QAASQ,EAAUR,QAC5DvB,KAAKW,cAAgBgB,IAAaC,cAAc5B,KAAKuB,QACrDvB,KAAK6B,kBAAkBE,EAAUP,kBAGzCvB,EAAOJ,UAAUsC,mBAAqB,WAClC,IAAIf,EAAKpB,KAAKqB,MAAOe,EAAehB,EAAGgB,aAAcC,EAAQjB,EAAGiB,MAAOC,EAAYlB,EAAGkB,UACtFtC,KAAKQ,yBAAyB4B,GAC9BpC,KAAKW,cAAc4B,SAASF,GAC5BrC,KAAKW,cAAc6B,aAAaF,IAEpCrC,EAAOJ,UAAU4C,qBAAuB,WACpCzC,KAAKiC,qBAAqBjC,KAAKqB,MAAMG,gBACrCxB,KAAKW,cAAcuB,UACnBlC,KAAKuB,OAAOS,cAAgB,KAC5BhC,KAAKW,cAAgB,MAEzBV,EAAOJ,UAAUa,2BAA6B,WAC1C,IAAIgC,EAAW1C,KAAKqB,MAAMqB,SACtBA,EACA1C,KAAKW,cAAcgC,aAAaD,GAGhC1C,KAAKW,cAAciC,QAG3B3C,EAAOJ,UAAUgC,kBAAoB,SAAUgB,GAC3C,IAAI1C,EAAQH,KACZ6C,EAAiBC,SAAQ,SAAU1B,GAC/B,IAAI2B,EAAO3B,EAAG2B,KAAMC,EAAW5B,EAAG4B,SAClC7C,EAAMQ,cAAcsC,iBAAiBF,EAAMC,OAGnD/C,EAAOJ,UAAUoC,qBAAuB,SAAUY,GAC9C,IAAI1C,EAAQH,KACZ6C,EAAiBC,SAAQ,SAAU1B,GAC/B,IAAI2B,EAAO3B,EAAG2B,KAAMC,EAAW5B,EAAG4B,SAClC7C,EAAMQ,cAAcuC,oBAAoBH,EAAMC,OAGtD/C,EAAOJ,UAAUsD,OAAS,WACtB,IAAIhD,EAAQH,KACRoB,EAAKpB,KAAKqB,MAAO+B,EAAQhC,EAAGgC,MAAOC,EAASjC,EAAGiC,OAAQC,EAAQlC,EAAGkC,MAClEC,EAAelE,EAAS,CAAE+D,MAAOA,EAAOC,OAAQA,GAAUC,GAC9D,OAAQE,IAAMC,cAAc,MAAO,CAAEC,IAAK,SAAUC,GAC5CxD,EAAMuB,GAAKiC,GACZL,MAAOC,KAElBtD,EAAO2D,aAAe,CAClBpC,eAAgB,GAChBY,aAAc,UACdC,MAAO,EACPgB,OAAQ,OACRD,MAAO,QAEJnD,EA/FiB,CAgG1BuD,IAAMK,WCzBOC,E,YA/Fb,WAAYzC,GAAa,IAAD,8BACtB,4CAAMA,KAXR0C,eAUwB,IATxBC,gBAAkB,CAChBC,EACAC,EACAC,EACAD,EACAE,EACAC,GAGsB,EAcxBC,SAAW,WACT,EAAKC,SAAS,CAAEnC,aAAc,aAfR,EAkBxBoC,SAAW,WACT,EAAKD,SAAS,CAAEnC,aAAc,aAnBR,EAqBxBqC,SAAW,WACT,EAAKF,SAAS,CAAEnC,aAAc,YAtBR,EAwBxBsC,QAAU,WACR,EAAKH,SAAS,CAAEnC,aAAc,aAzBR,EA4BxBuC,cAAgB,WACd,IAAMC,EAAO,EAAKZ,gBAAgBa,QAC7BD,EAML,EAAKL,SAAS,CACZhD,OAAQ,CAAES,cAAe4C,KANzB,EAAKL,SAAS,CACZnC,aAAc,YAhCI,EAyCxB0C,iBAAmB,WACjB,EAAKP,UAAS,SAAAQ,GAAS,MAAK,CAC1BzC,UAAWyC,EAAUzC,UAAY,GAAK,EAAI,OAzC5C,EAAK7B,MAAQ,CACXc,OAAQ,CAAES,cAAeiC,GACzB7B,aAAc,UACdC,MAAO,EACPC,UAAW,GANS,E,iFAWtBtC,KAAK2E,kB,+BAoCG,IAAD,OACDK,EAAc,CAClBC,QAAS,QACTC,OAAQ,YACRC,UAAW,UAJN,EAWsDnF,KAAKS,MAA1D2B,EAXD,EAWCA,aAAcE,EAXf,EAWeA,UAAWf,EAX1B,EAW0BA,OAAQc,EAXlC,EAWkCA,MAAOK,EAXzC,EAWyCA,SAChD,OAAQ,yBACN0C,QAASpF,KAAK8E,kBAEd,kBAAC,EAAD,CACEvD,OAAQA,EACR8B,OAAO,QACPD,MAAM,OACNE,MAbiB,CACnB+B,SAAU,SACVH,OAAQ,SACRI,QAAS,QAWPlD,aAAcA,EACdC,MAAOA,EACPK,SAAUA,EACVJ,UAAWA,EACXd,eAAgB,CACd,CAAEwB,SAAU,kBAAMuC,QAAQC,IAAI,oBAAoBzC,KAAM,aACxD,CAAEC,SAAUhD,KAAK2E,cAAe5B,KAAM,eAI1C,uBAAGO,MAAO0B,GAAV,aACA,yBAAK1B,MAAO0B,GACV,2BAAOS,KAAK,SAASC,MAAM,QAAQN,QAASpF,KAAKwE,WACjD,2BAAOiB,KAAK,SAASC,MAAM,QAAQN,QAASpF,KAAKyE,WACjD,2BAAOgB,KAAK,SAASC,MAAM,OAAON,QAASpF,KAAK0E,UAChD,2BAAOe,KAAK,SAASC,MAAM,OAAON,QAASpF,KAAK2E,iBAElD,uBAAGrB,MAAO0B,GAAV,WAAgC3C,GAChC,2BACEiB,MAAO0B,EACPS,KAAK,QAAQC,MAAOrD,EAAOsD,IAAI,IAAIC,IAAI,KAAKC,KAAK,MACjDC,SAAU,SAAAC,GAAC,OAAI,EAAKxB,SAAS,CAAElC,MAAO2D,WAAWD,EAAEE,cAAcP,QAAU,OAE5EhD,GAAY,uBAAGY,MAAO0B,GAAV,kBAAuCkB,KAAKC,UAAUzD,S,GArGvDmB,aCGEuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStD,OAAO,kBAAC,EAAD,MAASuD,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.29763166.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport lottiePlayer from 'lottie-web';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar Lottie = /** @class */ (function (_super) {\r\n    __extends(Lottie, _super);\r\n    function Lottie() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.defaultLottieConfig = {\r\n            renderer: 'svg',\r\n            loop: false,\r\n            autoplay: true\r\n        };\r\n        _this.setAnimationPlayingState = function (state) {\r\n            switch (state) {\r\n                case 'playing': {\r\n                    _this.triggerPlayBasedOnSegments();\r\n                    return;\r\n                }\r\n                case 'stopped': {\r\n                    _this.animationItem.stop();\r\n                    return;\r\n                }\r\n                case 'paused': {\r\n                    _this.animationItem.pause();\r\n                    return;\r\n                }\r\n                default: {\r\n                    throw new Error('Playing state not specified.');\r\n                }\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    Lottie.prototype.componentDidMount = function () {\r\n        var _a = this.props, configFromProps = _a.config, eventListeners = _a.eventListeners;\r\n        this.config = __assign(__assign(__assign({}, this.defaultLottieConfig), configFromProps), { container: this.el });\r\n        this.animationItem = lottiePlayer.loadAnimation(this.config);\r\n        this.addEventListeners(eventListeners);\r\n    };\r\n    Lottie.prototype.UNSAFE_componentWillUpdate = function (nextProps) {\r\n        if (this.config.animationData !== nextProps.config.animationData) {\r\n            this.removeEventListeners(this.props.eventListeners);\r\n            this.animationItem.destroy();\r\n            this.config = __assign(__assign({}, this.config), nextProps.config);\r\n            this.animationItem = lottiePlayer.loadAnimation(this.config);\r\n            this.addEventListeners(nextProps.eventListeners);\r\n        }\r\n    };\r\n    Lottie.prototype.componentDidUpdate = function () {\r\n        var _a = this.props, playingState = _a.playingState, speed = _a.speed, direction = _a.direction;\r\n        this.setAnimationPlayingState(playingState);\r\n        this.animationItem.setSpeed(speed);\r\n        this.animationItem.setDirection(direction);\r\n    };\r\n    Lottie.prototype.componentWillUnmount = function () {\r\n        this.removeEventListeners(this.props.eventListeners);\r\n        this.animationItem.destroy();\r\n        this.config.animationData = null;\r\n        this.animationItem = null;\r\n    };\r\n    Lottie.prototype.triggerPlayBasedOnSegments = function () {\r\n        var segments = this.props.segments;\r\n        if (segments) {\r\n            this.animationItem.playSegments(segments);\r\n        }\r\n        else {\r\n            this.animationItem.play();\r\n        }\r\n    };\r\n    Lottie.prototype.addEventListeners = function (reactLottieEvent) {\r\n        var _this = this;\r\n        reactLottieEvent.forEach(function (_a) {\r\n            var name = _a.name, callback = _a.callback;\r\n            _this.animationItem.addEventListener(name, callback);\r\n        });\r\n    };\r\n    Lottie.prototype.removeEventListeners = function (reactLottieEvent) {\r\n        var _this = this;\r\n        reactLottieEvent.forEach(function (_a) {\r\n            var name = _a.name, callback = _a.callback;\r\n            _this.animationItem.removeEventListener(name, callback);\r\n        });\r\n    };\r\n    Lottie.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, width = _a.width, height = _a.height, style = _a.style;\r\n        var lottieStyles = __assign({ width: width, height: height }, style);\r\n        return (React.createElement(\"div\", { ref: function (c) {\r\n                _this.el = c;\r\n            }, style: lottieStyles }));\r\n    };\r\n    Lottie.defaultProps = {\r\n        eventListeners: [],\r\n        playingState: 'playing',\r\n        speed: 1,\r\n        height: '100%',\r\n        width: '100%',\r\n    };\r\n    return Lottie;\r\n}(React.Component));\n\nexport { Lottie };\n","import React, { Component } from 'react';\nimport spinnerLottieData from './lotties/spinner-animation.json';\nimport vanLottieData from './lotties/11562-van-icon.json';\nimport downloadLottieData from './lotties/11599-download.json';\nimport lightBulbLottieData from './lotties/3520-light-bulb.json';\nimport loadingLottieData from './lotties/142-loading-animation.json';\n\nimport { Lottie, ReactLottieOwnProps } from './reactComponentLib';\n\nclass App extends Component<any, ReactLottieOwnProps> {\n  prevSpeed: number;\n  animationsQueue = [\n    spinnerLottieData,\n    vanLottieData,\n    downloadLottieData,\n    vanLottieData,\n    loadingLottieData,\n    lightBulbLottieData,\n  ];\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      config: { animationData: spinnerLottieData },\n      playingState: 'playing',\n      speed: 2,\n      direction: 1,\n    };\n  }\n\n  componentDidMount() {\n    this.nextAnimation();\n  }\n\n  restrart = () => {\n    this.setState({ playingState: 'playing' });\n  }\n\n  setStart = () => {\n    this.setState({ playingState: 'playing' })\n  }\n  setPause = () => {\n    this.setState({ playingState: 'paused' })\n  }\n  setStop = () => {\n    this.setState({ playingState: 'stopped' })\n  }\n\n  nextAnimation = () => {\n    const next = this.animationsQueue.shift();\n    if (!next) {\n      this.setState({\n        playingState: 'paused'\n      });\n      return;\n    }\n    this.setState({\n      config: { animationData: next }\n    });\n  }\n\n  reverseDirection = () => {\n    this.setState(prevState => ({\n      direction: prevState.direction > 0 ? -1 : 1\n    }));\n  }\n\n  render() {\n    const centerStyle = {\n      display: 'block',\n      margin: '10px auto',\n      textAlign: 'center' as const,\n    };\n    const lottieStyles = {\n      overflow: 'hidden',\n      margin: '0 auto',\n      outline: 'none',\n    }\n    const { playingState, direction, config, speed, segments } = this.state;\n    return (<div\n      onClick={this.reverseDirection}\n    >\n      <Lottie\n        config={config}\n        height=\"400px\"\n        width='100%'\n        style={lottieStyles}\n        playingState={playingState}\n        speed={speed}\n        segments={segments}\n        direction={direction}\n        eventListeners={[\n          { callback: () => console.log('DOMLoaded event'), name: 'DOMLoaded' },\n          { callback: this.nextAnimation, name: 'complete' },\n        ]}\n      />\n\n      <p style={centerStyle}>Controls:</p>\n      <div style={centerStyle}>\n        <input type=\"button\" value=\"Start\" onClick={this.setStart} />\n        <input type=\"button\" value=\"Pause\" onClick={this.setPause} />\n        <input type=\"button\" value=\"Stop\" onClick={this.setStop} />\n        <input type=\"button\" value=\"Next\" onClick={this.nextAnimation} />\n      </div>\n      <p style={centerStyle}>Speed: x{speed}</p>\n      <input\n        style={centerStyle}\n        type=\"range\" value={speed} min=\"0\" max=\"10\" step=\"0.5\"\n        onChange={e => this.setState({ speed: parseFloat(e.currentTarget.value) || 1 })}\n      />\n      {segments && <p style={centerStyle}>Segment range: {JSON.stringify(segments)}</p>}\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}